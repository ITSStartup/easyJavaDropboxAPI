package com.its.dropbox;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

import com.dropbox.core.DbxClient;
import com.dropbox.core.DbxEntry;
import com.dropbox.core.DbxEntry.WithChildren;
import com.dropbox.core.DbxException;
import com.dropbox.core.DbxRequestConfig;

public class DropBox {
	private String root = "/";
	private String dropboxPath = root;
	private DbxRequestConfig config;
	private DbxEntry.WithChildren listing = null;
	private DbxClient client;
	
	/**
	 * 
	 * @param dropboxPath default is root /
	 */
	public DropBox(String dropboxPath,String token) {
	this.dropboxPath = dropboxPath;
	config = new DbxRequestConfig("JavaTutorial/1.0",	Locale.getDefault().toString());
	 client = new DbxClient(config, token);
	}
	
	/**
	 * 
	 * @param token generated by dropbox api
	 * @return  files/folders for dropboxpath specified
	 */
	public WithChildren getListing(){
		try {
			 listing = client.getMetadataWithChildren(dropboxPath);
		}catch (DbxException e) {
			e.printStackTrace();
		}
		catch (Exception e) {
			e.printStackTrace();
		}
		return listing;
	}
	/**
	 * 
	 * @param basePath inform the path of the file 
	 * @param query  what you wish search 
	 * @return 
	 */
	public  List<DbxEntry> searchFile(String basePath, String query){
		List<DbxEntry> listFileAndFolderNames = new ArrayList<DbxEntry>();
		try {
			listFileAndFolderNames = client.searchFileAndFolderNames(basePath, query);
		} catch (DbxException e) {
			e.printStackTrace();
		}
		return listFileAndFolderNames; 
	}

	public DbxClient getClient() {
		return client;
	}
}
